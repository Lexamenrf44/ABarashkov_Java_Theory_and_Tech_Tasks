plugins {
    id 'java-library'
    id "io.qameta.allure" version "2.11.2"
    id 'io.qameta.allure-adapter' version '2.11.2'
    id "io.freefair.lombok" version "6.0.0-m2"
    id 'org.gradle.test-retry' version '1.5.4'
}

repositories {
    mavenCentral()
}

def allureVersion = '2.27.0',
    selenideVersion = '7.5.0',
    restAssuredVersion = '5.4.0',
    commonsIoVersion = '2.16.1',
    junitVersion = '5.11.0',
    slf4jVersion = '2.0.13',
    assertJVersion = '3.25.3'

allure
        {
            report {
                version.set(allureVersion)
            }
            adapter {
                aspectjWeaver.set(true)
                frameworks {
                    junit5 {
                        adapterVersion.set(allureVersion)
                    }
                }
            }
        }

dependencies {
    implementation ("io.qameta.allure:allure-rest-assured:$allureVersion") {
        exclude group: 'io.rest-assured'
        exclude group: 'org.slf4j'

    }
    implementation ("io.qameta.allure:allure-selenide:$allureVersion") {
        exclude group: 'com.codeborne'
    }
    implementation("io.qameta.allure:allure-junit5:${allureVersion}") {
        exclude group: 'org.junit.jupiter'
    }

    implementation ("com.codeborne:selenide:$selenideVersion") {
        exclude group: 'org.slf4j'
    }
    implementation "org.junit.jupiter:junit-jupiter:$junitVersion"
    implementation "io.rest-assured:rest-assured:$restAssuredVersion"
    implementation "commons-io:commons-io:$commonsIoVersion"
    implementation "org.assertj:assertj-core:$assertJVersion"
    implementation "org.slf4j:slf4j-simple:$slf4jVersion"

    implementation 'com.github.javafaker:javafaker:1.0.2'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.17.0'

    implementation "com.codeborne:selenide-proxy:$selenideVersion"
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(Test) {
    systemProperties(System.getProperties())
    useJUnitPlatform()

    testLogging {
        events "PASSED", "FAILED", "SKIPPED"//, "standard_out"
    }
}

task webTests(type: Test) {
    systemProperty 'junit.jupiter.execution.parallel.enabled', 'true'
    systemProperty 'junit.jupiter.execution.parallel.mode.default', 'concurrent'
    systemProperty 'junit.jupiter.execution.parallel.mode.classes.default', 'concurrent'
    systemProperty 'junit.jupiter.execution.parallel.config.strategy', 'fixed'
    systemProperty 'junit.jupiter.execution.parallel.config.fixed.parallelism', '3'
    systemProperty 'junit.jupiter.execution.parallel.config.fixed.max-pool-size', '3'

    useJUnitPlatform {
        includeTags 'webTests'
    }

    retry {
        maxRetries = 1
        maxFailures = 10
        failOnPassedAfterRetry = true
    }
}

task restTests(type: Test) {

    useJUnitPlatform {
        includeTags 'restTests'
    }
}